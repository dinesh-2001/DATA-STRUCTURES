class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class linked:
    def __init__(self):
        self.head=None
    def insstart(self,data):
        newnode=Node(data)
        newnode.next=self.head
        self.head=newnode
    def insend(self,data):
        newnode=Node(data)
        temp=self.head
        if self.head is None:
            self.head=newnode
            return
        while temp.next is not None:
            temp=temp.next
        temp.next=newnode
    def inspos(self,pos,data):
        size=self.calcsize()
        if pos==0:
            self.insstart(data)
        if pos<0 or pos>size:
            print("can't insert ")
        else:
            newnode=Node(data)
            temp=self.head
            for i in range(1,pos-1):
                temp=temp.next
            newnode.next=temp.next
            temp.next=newnode
    def display(self):
        temp=self.head
        while temp:
            print(temp.data,end=" ")
            temp=temp.next
    def calcsize(self):
        temp=self.head
        a=0
        while temp:
            temp=temp.next
            a+=1
        return a

#Drive Code
ll = linked() 

ll.insstart(12) 
ll.insstart(16) 
ll.insstart(20) 
	      
ll.insend(10) 
ll.insend(14) 
ll.insend(18) 
ll.insend(11) 
 
#Inserts after 3rd position
ll.inspos(3, 25) 
 
ll.display()
