class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
        self.prev=None
class linked:
    def __init__(self):
        self.head=None
    def insstart(self,data):
        newnode=Node(data)
        newnode.next=self.head
        if self.head is not None:
            self.head.prev=newnode
        self.head=newnode
    def insend(self,data):
        newnode=Node(data)
        temp=self.head
        if self.head is None:
            self.head=newnode
            return
        while temp.next is not None:
            temp=temp.next
        temp.next=newnode
        newnode.prev=temp
    def inspos(self,pos,data):
        size=self.calcsize()
        if pos==0:
            self.insstart(data)
        if pos<0 or pos>size:
            print("can't insert ")
        else:
            newnode=Node(data)
            temp=self.head
            for i in range(1,pos-1):
                temp=temp.next
            newnode.next=temp.next
            newnode.prev=temp
            temp.next.prev=newnode
            temp.next=newnode
    def display(self):
        temp=self.head
        end=None
        while temp:
            print(temp.data,end=" ")
            end=temp
            temp=temp.next
        print('')
        while end:
            print(end.data,end =" ") 
            end=end.prev 
    def calcsize(self):
        temp=self.head
        a=0
        while temp:
            temp=temp.next
            a+=1
        return a
    def delete(self,num):
        temp=self.head
        if temp.next is None:
            self.head=None
        if temp.data == num:
            self.head=temp.next
            self.head.prev=None
            return
        while temp.next != None and temp.data!=num:
            pre=temp
            temp=temp.next
        if temp.next == None and temp.data==num:
            pre.next=None
            return -2
        elif(temp.next==None):
            return -1
        pre.next=temp.next
        temp.next.prev=pre
        return temp.data
#Drive Code
ll = linked() 

ll.insstart(12) 
ll.insstart(16) 
ll.insstart(20) 
	      
ll.insend(10) 
ll.insend(14) 
ll.insend(18) 
ll.insend(11) 
 
#Inserts after 3rd position
ll.inspos(3, 25) 
ll.inspos(5, 4) 
 
ll.display()
print(end='\n')
if(ll.delete(20)==-1):
    print("print number not exist")
if(ll.delete(14)==-1):
    print("print number not exist")
if(ll.delete(4)==-1):
    print("print number not exist")
if(ll.delete(90)==-1):
    print("print number not exist")
ll.display()
